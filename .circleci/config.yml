aliases:
  - &environment-settings
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo
  - &restore-repo-cache
    restore_cache:
      name: Restore Repository Cache
      keys:
        - source-v1-{{ .Branch }}-{{ .Revision }}
        - source-v1-{{ .Branch }}-
        - source-v1-
  - &restore-yarn-cache
    restore_cache:
      name: Restore Dependency Cache
      keys:
        - dependencies-v1-{{ checksum "yarn.lock" }}
        - dependencies-v1-

version: 2
jobs:
  setup:
    <<: *environment-settings
    steps:
      - *restore-repo-cache
      - checkout
      - save_cache:
          name: Save Repository Cache
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
      - *restore-yarn-cache
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Dependency Cache
          key: dependencies-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  build:
    <<: *environment-settings
    steps:
      - *restore-repo-cache
      - *restore-yarn-cache
      - run:
          name: Build Library
          command: yarn run build

  quality:
    <<: *environment-settings
    steps:
      - *restore-repo-cache
      - *restore-yarn-cache
      - run:
          name: Setup Reporting Environment
          command: mkdir -p reports/eslint
      - run:
          name: Check Code Quality with ESLint
          command: yarn run lint:eslint --format junit --output-file $CIRCLE_WORKING_DIRECTORY/reports/eslint/results.xml
      - run:
          name: Check Code Style with Prettier
          command: yarn run lint:prettier
      - store_test_results:
          path: reports

  test:
    <<: *environment-settings
    steps:
      - *restore-repo-cache
      - *restore-yarn-cache
      - run:
          name: Run tests and generate coverage report
          command: yarn run test --coverage && yarn codecov

workflows:
  version: 2
  pipeline:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - setup
      - quality:
          requires:
            - setup
